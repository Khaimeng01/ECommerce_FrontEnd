import { ElementRef, Renderer2, NgZone, OnInit, OnDestroy } from '@angular/core';
/**
 * Angular Lazy Loading Images Directive
 *
 * The library allows to lazy load images from your web application
 * using the MutationObserver and the IntersectionObserver. Images will be loaded as
 * soon as they enter the viewport in a non-blocking way.
 */
import * as ɵngcc0 from '@angular/core';
export declare class LazyLoadImagesDirective implements OnInit, OnDestroy {
    renderer: Renderer2;
    ngZone: NgZone;
    private platformId;
    intersectionObserverConfig: object | string;
    intersectionObserver: IntersectionObserver;
    rootElement: HTMLElement;
    constructor(element: ElementRef, renderer: Renderer2, ngZone: NgZone, platformId: any);
    init(): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    isBrowser(): boolean;
    registerIntersectionObserver(): IntersectionObserver;
    observeDOMChanges(rootElement: HTMLElement, onChange: () => void): MutationObserver;
    getAllImagesToLazyLoad(pageNode: HTMLElement): Element[];
    onIntersectionChange(image: any): void;
    onImageAppearsInViewport(image: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<LazyLoadImagesDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<LazyLoadImagesDirective, "[lazy-load-images]", never, { "intersectionObserverConfig": "lazy-load-images"; }, {}, never>;
}

//# sourceMappingURL=ngx-lazy-load-images.directive.d.ts.map