{"version":3,"file":"ngx-lazy-load-images.directive.d.ts","sources":["ngx-lazy-load-images.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, Renderer2, NgZone, OnInit, OnDestroy } from '@angular/core';\n/**\n * Angular Lazy Loading Images Directive\n *\n * The library allows to lazy load images from your web application\n * using the MutationObserver and the IntersectionObserver. Images will be loaded as\n * soon as they enter the viewport in a non-blocking way.\n */\nexport declare class LazyLoadImagesDirective implements OnInit, OnDestroy {\n    renderer: Renderer2;\n    ngZone: NgZone;\n    private platformId;\n    intersectionObserverConfig: object | string;\n    intersectionObserver: IntersectionObserver;\n    rootElement: HTMLElement;\n    constructor(element: ElementRef, renderer: Renderer2, ngZone: NgZone, platformId: any);\n    init(): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    isBrowser(): boolean;\n    registerIntersectionObserver(): IntersectionObserver;\n    observeDOMChanges(rootElement: HTMLElement, onChange: () => void): MutationObserver;\n    getAllImagesToLazyLoad(pageNode: HTMLElement): Element[];\n    onIntersectionChange(image: any): void;\n    onImageAppearsInViewport(image: any): void;\n}\n"]}